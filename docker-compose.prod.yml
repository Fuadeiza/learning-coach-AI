version: '3.8'

services:
  # PostgreSQL Database - Production Configuration
  db:
    image: postgres:15-alpine
    container_name: learning_coach_db_prod
    restart: always
    environment:
      POSTGRES_DB: learning_coach_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - learning_coach_network_prod
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d learning_coach_db"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Redis Cache - Production Configuration
  redis:
    image: redis:7-alpine
    container_name: learning_coach_redis_prod
    restart: always
    command: redis-server --requirepass "${REDIS_PASSWORD}" --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data_prod:/data
    networks:
      - learning_coach_network_prod
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # AI Learning Coach Web Application - Production
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: learning_coach_web_prod
    restart: always
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD}@db:5432/learning_coach_db
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: learning_coach_db
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD}
      
      # Redis Configuration
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      
      # JWT Configuration
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      
      # AI Services
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      
      # Application Configuration
      ENVIRONMENT: production
      LOG_LEVEL: WARNING
      CORS_ORIGINS: ${CORS_ORIGINS}
      
      # Rate Limiting - Stricter for production
      LOGIN_RATE_LIMIT_ATTEMPTS: 3
      LOGIN_RATE_LIMIT_WINDOW_MINUTES: 15
      REGISTRATION_RATE_LIMIT_ATTEMPTS: 2
      REGISTRATION_RATE_LIMIT_WINDOW_MINUTES: 60
      
      # Security
      SECURE_COOKIES: "true"
      HTTPS_ONLY: "true"
    volumes:
      - ./logs:/app/logs:rw
      - app_data_prod:/app/data:rw
    networks:
      - learning_coach_network_prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
      replicas: 2
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 30s
        failure_action: pause
        order: stop-first

  # Nginx Reverse Proxy for Production
  nginx:
    image: nginx:alpine
    container_name: learning_coach_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - web
    networks:
      - learning_coach_network_prod
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

# Secrets for production
secrets:
  db_password:
    external: true
    name: learning_coach_db_password

# Named volumes for data persistence
volumes:
  postgres_data_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/learning_coach/data/postgres
  redis_data_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/learning_coach/data/redis
  app_data_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/learning_coach/data/app
  nginx_logs:
    driver: local

# Production network with custom subnet
networks:
  learning_coach_network_prod:
    driver: bridge
    name: learning_coach_network_prod
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16 